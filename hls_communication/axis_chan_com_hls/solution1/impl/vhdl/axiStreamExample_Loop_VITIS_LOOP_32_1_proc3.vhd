-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity axiStreamExample_Loop_VITIS_LOOP_32_1_proc3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    producer_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    producer_TVALID : IN STD_LOGIC;
    producer_TREADY : OUT STD_LOGIC;
    consumer_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    consumer_TVALID : OUT STD_LOGIC;
    consumer_TREADY : IN STD_LOGIC );
end;


architecture behav of axiStreamExample_Loop_VITIS_LOOP_32_1_proc3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal producer_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln32_fu_81_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln32_reg_195 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal consumer_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal icmp_ln32_reg_195_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_69 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal producer_read_reg_199 : STD_LOGIC_VECTOR (7 downto 0);
    signal producer_read_1_reg_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal producer_read_2_reg_209 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state14_io : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal add_ln32_fu_87_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln32_reg_214 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal trunc_ln33_fu_112_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_state16_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state16_io : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal trunc_ln33_2_reg_234 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln33_3_reg_239 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln33_4_reg_244 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln34_fu_147_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln34_reg_249 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln35_fu_151_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln35_reg_254 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal trunc_ln36_fu_155_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln36_reg_259 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal trunc_ln37_fu_159_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln37_reg_264 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal zext_ln34_fu_163_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state10_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal trunc_ln38_fu_167_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln38_reg_274 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln35_fu_171_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state11_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal trunc_ln39_fu_175_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln39_reg_284 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln36_fu_179_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln37_fu_183_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln38_fu_187_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln39_fu_191_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_phi_mux_i_phi_fu_73_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal ap_block_pp0_stage7_01001 : BOOLEAN;
    signal ap_block_pp0_stage8_01001 : BOOLEAN;
    signal ap_block_pp0_stage9_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal grp_fu_106_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_106_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_106_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_106_ce : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal regslice_both_consumer_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_producer_U_apdone_blk : STD_LOGIC;
    signal producer_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal producer_TVALID_int_regslice : STD_LOGIC;
    signal producer_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_producer_U_ack_in : STD_LOGIC;
    signal consumer_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal consumer_TVALID_int_regslice : STD_LOGIC;
    signal consumer_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_consumer_U_vld_out : STD_LOGIC;
    signal grp_fu_106_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component axiStreamExample_mul_32s_3ns_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component axiStreamExample_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    mul_32s_3ns_32_2_1_U1 : component axiStreamExample_mul_32s_3ns_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_106_p0,
        din1 => grp_fu_106_p1,
        ce => grp_fu_106_ce,
        dout => grp_fu_106_p2);

    regslice_both_producer_U : component axiStreamExample_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => producer_TDATA,
        vld_in => producer_TVALID,
        ack_in => regslice_both_producer_U_ack_in,
        data_out => producer_TDATA_int_regslice,
        vld_out => producer_TVALID_int_regslice,
        ack_out => producer_TREADY_int_regslice,
        apdone_blk => regslice_both_producer_U_apdone_blk);

    regslice_both_consumer_U : component axiStreamExample_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => consumer_TDATA_int_regslice,
        vld_in => consumer_TVALID_int_regslice,
        ack_in => consumer_TREADY_int_regslice,
        data_out => consumer_TDATA,
        vld_out => regslice_both_consumer_U_vld_out,
        ack_out => consumer_TREADY,
        apdone_blk => regslice_both_consumer_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((regslice_both_consumer_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_69_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_69 <= ap_const_lv3_0;
            elsif (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i_reg_69 <= add_ln32_reg_214;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add_ln32_reg_214 <= add_ln32_fu_87_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln32_reg_195 <= icmp_ln32_fu_81_p2;
                icmp_ln32_reg_195_pp0_iter1_reg <= icmp_ln32_reg_195;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                producer_read_1_reg_204 <= producer_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                producer_read_2_reg_209 <= producer_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_fu_81_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                producer_read_reg_199 <= producer_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                trunc_ln33_2_reg_234 <= grp_fu_106_p2(15 downto 8);
                trunc_ln33_3_reg_239 <= grp_fu_106_p2(23 downto 16);
                trunc_ln33_4_reg_244 <= grp_fu_106_p2(31 downto 24);
                trunc_ln34_reg_249 <= trunc_ln34_fu_147_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                trunc_ln35_reg_254 <= trunc_ln35_fu_151_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                trunc_ln36_reg_259 <= trunc_ln36_fu_155_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                trunc_ln37_reg_264 <= trunc_ln37_fu_159_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                trunc_ln38_reg_274 <= trunc_ln38_fu_167_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                trunc_ln39_reg_284 <= trunc_ln39_fu_175_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage3_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage4_subdone, ap_CS_fsm_state17, regslice_both_consumer_U_apdone_blk, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((not(((icmp_ln32_reg_195 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                elsif (((icmp_ln32_reg_195 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_state17 => 
                if (((regslice_both_consumer_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln32_fu_87_p2 <= std_logic_vector(unsigned(i_reg_69) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state17 <= ap_CS_fsm(11);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_fu_81_p2, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((producer_TVALID_int_regslice = ap_const_logic_0) and (icmp_ln32_fu_81_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_fu_81_p2, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, ap_block_state12_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((producer_TVALID_int_regslice = ap_const_logic_0) and (icmp_ln32_fu_81_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state12_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_fu_81_p2, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, ap_block_state12_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((producer_TVALID_int_regslice = ap_const_logic_0) and (icmp_ln32_fu_81_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state12_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_01001 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, ap_block_state13_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_11001 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, ap_block_state13_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_subdone <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0)))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_01001 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, ap_block_state14_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_11001 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state14_io) or ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, ap_block_state14_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_subdone <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state14_io) or ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0)))));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage3_01001 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, ap_block_state15_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage3_11001 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, ap_block_state15_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage3_subdone <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0)))));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage4_01001 <= (((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, ap_block_state6_io, ap_block_state16_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage4_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state6_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state16_io) or ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, ap_block_state6_io, ap_block_state16_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage4_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state6_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state16_io) or ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0)))));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage5_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_block_state7_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state7_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_block_state7_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state7_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage6_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_block_state8_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage6_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state8_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_block_state8_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage6_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state8_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage7_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_block_state9_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage7_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_block_state9_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage7_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage8_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_block_state10_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_block_state10_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage9_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_block_state11_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage9_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln32_reg_195, ap_block_state11_io, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_pp0_stage9_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state10_io_assign_proc : process(icmp_ln32_reg_195, consumer_TREADY_int_regslice)
    begin
                ap_block_state10_io <= ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state10_pp0_stage8_iter0_assign_proc : process(icmp_ln32_reg_195, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_state10_pp0_stage8_iter0 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state11_io_assign_proc : process(icmp_ln32_reg_195, consumer_TREADY_int_regslice)
    begin
                ap_block_state11_io <= ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state11_pp0_stage9_iter0_assign_proc : process(icmp_ln32_reg_195, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_state11_pp0_stage9_iter0 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state12_io_assign_proc : process(icmp_ln32_reg_195, consumer_TREADY_int_regslice)
    begin
                ap_block_state12_io <= ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state12_pp0_stage0_iter1_assign_proc : process(icmp_ln32_reg_195, consumer_TREADY_int_regslice)
    begin
                ap_block_state12_pp0_stage0_iter1 <= ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state13_io_assign_proc : process(icmp_ln32_reg_195_pp0_iter1_reg, consumer_TREADY_int_regslice)
    begin
                ap_block_state13_io <= ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state13_pp0_stage1_iter1_assign_proc : process(icmp_ln32_reg_195_pp0_iter1_reg, consumer_TREADY_int_regslice)
    begin
                ap_block_state13_pp0_stage1_iter1 <= ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state14_io_assign_proc : process(icmp_ln32_reg_195_pp0_iter1_reg, consumer_TREADY_int_regslice)
    begin
                ap_block_state14_io <= ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state14_pp0_stage2_iter1_assign_proc : process(icmp_ln32_reg_195_pp0_iter1_reg, consumer_TREADY_int_regslice)
    begin
                ap_block_state14_pp0_stage2_iter1 <= ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state15_io_assign_proc : process(icmp_ln32_reg_195_pp0_iter1_reg, consumer_TREADY_int_regslice)
    begin
                ap_block_state15_io <= ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state15_pp0_stage3_iter1_assign_proc : process(icmp_ln32_reg_195_pp0_iter1_reg, consumer_TREADY_int_regslice)
    begin
                ap_block_state15_pp0_stage3_iter1 <= ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state16_io_assign_proc : process(icmp_ln32_reg_195_pp0_iter1_reg, consumer_TREADY_int_regslice)
    begin
                ap_block_state16_io <= ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state16_pp0_stage4_iter1_assign_proc : process(icmp_ln32_reg_195_pp0_iter1_reg, consumer_TREADY_int_regslice)
    begin
                ap_block_state16_pp0_stage4_iter1 <= ((consumer_TREADY_int_regslice = ap_const_logic_0) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(icmp_ln32_fu_81_p2, producer_TVALID_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((producer_TVALID_int_regslice = ap_const_logic_0) and (icmp_ln32_fu_81_p2 = ap_const_lv1_0));
    end process;


    ap_block_state3_pp0_stage1_iter0_assign_proc : process(icmp_ln32_reg_195, producer_TVALID_int_regslice)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage2_iter0_assign_proc : process(icmp_ln32_reg_195, producer_TVALID_int_regslice)
    begin
                ap_block_state4_pp0_stage2_iter0 <= ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state5_pp0_stage3_iter0_assign_proc : process(icmp_ln32_reg_195, producer_TVALID_int_regslice)
    begin
                ap_block_state5_pp0_stage3_iter0 <= ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state6_io_assign_proc : process(icmp_ln32_reg_195, consumer_TREADY_int_regslice)
    begin
                ap_block_state6_io <= ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state6_pp0_stage4_iter0_assign_proc : process(icmp_ln32_reg_195, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_state6_pp0_stage4_iter0 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state7_io_assign_proc : process(icmp_ln32_reg_195, consumer_TREADY_int_regslice)
    begin
                ap_block_state7_io <= ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state7_pp0_stage5_iter0_assign_proc : process(icmp_ln32_reg_195, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_state7_pp0_stage5_iter0 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state8_io_assign_proc : process(icmp_ln32_reg_195, consumer_TREADY_int_regslice)
    begin
                ap_block_state8_io <= ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state8_pp0_stage6_iter0_assign_proc : process(icmp_ln32_reg_195, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_state8_pp0_stage6_iter0 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state9_io_assign_proc : process(icmp_ln32_reg_195, consumer_TREADY_int_regslice)
    begin
                ap_block_state9_io <= ((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state9_pp0_stage7_iter0_assign_proc : process(icmp_ln32_reg_195, producer_TVALID_int_regslice, consumer_TREADY_int_regslice)
    begin
                ap_block_state9_pp0_stage7_iter0 <= (((icmp_ln32_reg_195 = ap_const_lv1_0) and (consumer_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (producer_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_condition_pp0_exit_iter0_state5_assign_proc : process(icmp_ln32_reg_195)
    begin
        if ((icmp_ln32_reg_195 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state17, regslice_both_consumer_U_apdone_blk)
    begin
        if (((regslice_both_consumer_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_73_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, icmp_ln32_reg_195, ap_enable_reg_pp0_iter1, i_reg_69, add_ln32_reg_214)
    begin
        if (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_i_phi_fu_73_p4 <= add_ln32_reg_214;
        else 
            ap_phi_mux_i_phi_fu_73_p4 <= i_reg_69;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state17, regslice_both_consumer_U_apdone_blk)
    begin
        if (((regslice_both_consumer_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    consumer_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln32_reg_195, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, consumer_TREADY_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            consumer_TDATA_blk_n <= consumer_TREADY_int_regslice;
        else 
            consumer_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    consumer_TDATA_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln32_reg_195, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, trunc_ln33_fu_112_p1, trunc_ln33_2_reg_234, trunc_ln33_3_reg_239, trunc_ln33_4_reg_244, zext_ln34_fu_163_p1, zext_ln35_fu_171_p1, zext_ln36_fu_179_p1, zext_ln37_fu_183_p1, zext_ln38_fu_187_p1, zext_ln39_fu_191_p1, ap_block_pp0_stage4_01001, ap_block_pp0_stage5_01001, ap_block_pp0_stage6_01001, ap_block_pp0_stage7_01001, ap_block_pp0_stage8_01001, ap_block_pp0_stage9_01001, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            consumer_TDATA_int_regslice <= zext_ln39_fu_191_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            consumer_TDATA_int_regslice <= zext_ln38_fu_187_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            consumer_TDATA_int_regslice <= zext_ln37_fu_183_p1;
        elsif (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            consumer_TDATA_int_regslice <= zext_ln36_fu_179_p1;
        elsif (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            consumer_TDATA_int_regslice <= zext_ln35_fu_171_p1;
        elsif (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            consumer_TDATA_int_regslice <= zext_ln34_fu_163_p1;
        elsif (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            consumer_TDATA_int_regslice <= trunc_ln33_4_reg_244;
        elsif (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            consumer_TDATA_int_regslice <= trunc_ln33_3_reg_239;
        elsif (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            consumer_TDATA_int_regslice <= trunc_ln33_2_reg_234;
        elsif (((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            consumer_TDATA_int_regslice <= trunc_ln33_fu_112_p1;
        else 
            consumer_TDATA_int_regslice <= "XXXXXXXX";
        end if; 
    end process;

    consumer_TVALID <= regslice_both_consumer_U_vld_out;

    consumer_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln32_reg_195, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter1, icmp_ln32_reg_195_pp0_iter1_reg, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln32_reg_195_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            consumer_TVALID_int_regslice <= ap_const_logic_1;
        else 
            consumer_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_106_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_106_ce <= ap_const_logic_1;
        else 
            grp_fu_106_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_106_p0 <= (((producer_TDATA_int_regslice & producer_read_2_reg_209) & producer_read_1_reg_204) & producer_read_reg_199);
    grp_fu_106_p1 <= grp_fu_106_p10(3 - 1 downto 0);
    grp_fu_106_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_69),32));
    icmp_ln32_fu_81_p2 <= "1" when (ap_phi_mux_i_phi_fu_73_p4 = ap_const_lv3_5) else "0";

    producer_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln32_fu_81_p2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln32_reg_195, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, producer_TVALID_int_regslice)
    begin
        if ((((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln32_fu_81_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            producer_TDATA_blk_n <= producer_TVALID_int_regslice;
        else 
            producer_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    producer_TREADY <= regslice_both_producer_U_ack_in;

    producer_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln32_fu_81_p2, ap_CS_fsm_pp0_stage1, icmp_ln32_reg_195, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln32_reg_195 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln32_fu_81_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            producer_TREADY_int_regslice <= ap_const_logic_1;
        else 
            producer_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln33_fu_112_p1 <= grp_fu_106_p2(8 - 1 downto 0);
    trunc_ln34_fu_147_p1 <= producer_TDATA_int_regslice(4 - 1 downto 0);
    trunc_ln35_fu_151_p1 <= producer_TDATA_int_regslice(4 - 1 downto 0);
    trunc_ln36_fu_155_p1 <= producer_TDATA_int_regslice(2 - 1 downto 0);
    trunc_ln37_fu_159_p1 <= producer_TDATA_int_regslice(1 - 1 downto 0);
    trunc_ln38_fu_167_p1 <= producer_TDATA_int_regslice(1 - 1 downto 0);
    trunc_ln39_fu_175_p1 <= producer_TDATA_int_regslice(1 - 1 downto 0);
    zext_ln34_fu_163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln34_reg_249),8));
    zext_ln35_fu_171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln35_reg_254),8));
    zext_ln36_fu_179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln36_reg_259),8));
    zext_ln37_fu_183_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln37_reg_264),8));
    zext_ln38_fu_187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln38_reg_274),8));
    zext_ln39_fu_191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln39_reg_284),8));
end behav;
