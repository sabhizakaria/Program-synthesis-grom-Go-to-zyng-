-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity axiStreamExample is
port (
    producer_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    consumer_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    producer_TVALID : IN STD_LOGIC;
    producer_TREADY : OUT STD_LOGIC;
    consumer_TVALID : OUT STD_LOGIC;
    consumer_TREADY : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of axiStreamExample is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "axiStreamExample_axiStreamExample,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=56,HLS_SYN_TPT=57,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=249,HLS_SYN_LUT=289,HLS_VERSION=2020_2}";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal Loop_VITIS_LOOP_32_1_proc3_U0_ap_start : STD_LOGIC;
    signal Loop_VITIS_LOOP_32_1_proc3_U0_ap_done : STD_LOGIC;
    signal Loop_VITIS_LOOP_32_1_proc3_U0_ap_continue : STD_LOGIC;
    signal Loop_VITIS_LOOP_32_1_proc3_U0_ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_32_1_proc3_U0_ap_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_32_1_proc3_U0_producer_TREADY : STD_LOGIC;
    signal Loop_VITIS_LOOP_32_1_proc3_U0_consumer_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal Loop_VITIS_LOOP_32_1_proc3_U0_consumer_TVALID : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_32_1_proc3_U0_start_full_n : STD_LOGIC;
    signal Loop_VITIS_LOOP_32_1_proc3_U0_start_write : STD_LOGIC;

    component axiStreamExample_Loop_VITIS_LOOP_32_1_proc3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        producer_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        producer_TVALID : IN STD_LOGIC;
        producer_TREADY : OUT STD_LOGIC;
        consumer_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        consumer_TVALID : OUT STD_LOGIC;
        consumer_TREADY : IN STD_LOGIC );
    end component;



begin
    Loop_VITIS_LOOP_32_1_proc3_U0 : component axiStreamExample_Loop_VITIS_LOOP_32_1_proc3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_VITIS_LOOP_32_1_proc3_U0_ap_start,
        ap_done => Loop_VITIS_LOOP_32_1_proc3_U0_ap_done,
        ap_continue => Loop_VITIS_LOOP_32_1_proc3_U0_ap_continue,
        ap_idle => Loop_VITIS_LOOP_32_1_proc3_U0_ap_idle,
        ap_ready => Loop_VITIS_LOOP_32_1_proc3_U0_ap_ready,
        producer_TDATA => producer_TDATA,
        producer_TVALID => producer_TVALID,
        producer_TREADY => Loop_VITIS_LOOP_32_1_proc3_U0_producer_TREADY,
        consumer_TDATA => Loop_VITIS_LOOP_32_1_proc3_U0_consumer_TDATA,
        consumer_TVALID => Loop_VITIS_LOOP_32_1_proc3_U0_consumer_TVALID,
        consumer_TREADY => consumer_TREADY);




    Loop_VITIS_LOOP_32_1_proc3_U0_ap_continue <= ap_const_logic_1;
    Loop_VITIS_LOOP_32_1_proc3_U0_ap_start <= ap_start;
    Loop_VITIS_LOOP_32_1_proc3_U0_start_full_n <= ap_const_logic_1;
    Loop_VITIS_LOOP_32_1_proc3_U0_start_write <= ap_const_logic_0;
    ap_done <= Loop_VITIS_LOOP_32_1_proc3_U0_ap_done;
    ap_idle <= Loop_VITIS_LOOP_32_1_proc3_U0_ap_idle;
    ap_ready <= Loop_VITIS_LOOP_32_1_proc3_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Loop_VITIS_LOOP_32_1_proc3_U0_ap_done;
    ap_sync_ready <= Loop_VITIS_LOOP_32_1_proc3_U0_ap_ready;
    consumer_TDATA <= Loop_VITIS_LOOP_32_1_proc3_U0_consumer_TDATA;
    consumer_TVALID <= Loop_VITIS_LOOP_32_1_proc3_U0_consumer_TVALID;
    producer_TREADY <= Loop_VITIS_LOOP_32_1_proc3_U0_producer_TREADY;
end behav;
