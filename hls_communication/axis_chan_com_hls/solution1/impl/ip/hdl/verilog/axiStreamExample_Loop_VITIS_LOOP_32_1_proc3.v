// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module axiStreamExample_Loop_VITIS_LOOP_32_1_proc3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        producer_TDATA,
        producer_TVALID,
        producer_TREADY,
        consumer_TDATA,
        consumer_TVALID,
        consumer_TREADY
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_pp0_stage0 = 12'd2;
parameter    ap_ST_fsm_pp0_stage1 = 12'd4;
parameter    ap_ST_fsm_pp0_stage2 = 12'd8;
parameter    ap_ST_fsm_pp0_stage3 = 12'd16;
parameter    ap_ST_fsm_pp0_stage4 = 12'd32;
parameter    ap_ST_fsm_pp0_stage5 = 12'd64;
parameter    ap_ST_fsm_pp0_stage6 = 12'd128;
parameter    ap_ST_fsm_pp0_stage7 = 12'd256;
parameter    ap_ST_fsm_pp0_stage8 = 12'd512;
parameter    ap_ST_fsm_pp0_stage9 = 12'd1024;
parameter    ap_ST_fsm_state17 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] producer_TDATA;
input   producer_TVALID;
output   producer_TREADY;
output  [7:0] consumer_TDATA;
output   consumer_TVALID;
input   consumer_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    producer_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln32_fu_81_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln32_reg_195;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg    consumer_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln32_reg_195_pp0_iter1_reg;
reg   [2:0] i_reg_69;
reg    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state12_pp0_stage0_iter1;
reg    ap_block_state12_io;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] producer_read_reg_199;
reg   [7:0] producer_read_1_reg_204;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state13_pp0_stage1_iter1;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage1_11001;
reg   [7:0] producer_read_2_reg_209;
reg    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_state14_pp0_stage2_iter1;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage2_11001;
wire   [2:0] add_ln32_fu_87_p2;
reg   [2:0] add_ln32_reg_214;
reg    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_state15_pp0_stage3_iter1;
reg    ap_block_state15_io;
reg    ap_block_pp0_stage3_11001;
wire   [7:0] trunc_ln33_fu_112_p1;
reg    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_state6_io;
reg    ap_block_state16_pp0_stage4_iter1;
reg    ap_block_state16_io;
reg    ap_block_pp0_stage4_11001;
reg   [7:0] trunc_ln33_2_reg_234;
reg   [7:0] trunc_ln33_3_reg_239;
reg   [7:0] trunc_ln33_4_reg_244;
wire   [3:0] trunc_ln34_fu_147_p1;
reg   [3:0] trunc_ln34_reg_249;
wire   [3:0] trunc_ln35_fu_151_p1;
reg   [3:0] trunc_ln35_reg_254;
reg    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_state7_io;
reg    ap_block_pp0_stage5_11001;
wire   [1:0] trunc_ln36_fu_155_p1;
reg   [1:0] trunc_ln36_reg_259;
reg    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_state8_io;
reg    ap_block_pp0_stage6_11001;
wire   [0:0] trunc_ln37_fu_159_p1;
reg   [0:0] trunc_ln37_reg_264;
reg    ap_block_state9_pp0_stage7_iter0;
reg    ap_block_state9_io;
reg    ap_block_pp0_stage7_11001;
wire   [7:0] zext_ln34_fu_163_p1;
reg    ap_block_state10_pp0_stage8_iter0;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage8_11001;
wire   [0:0] trunc_ln38_fu_167_p1;
reg   [0:0] trunc_ln38_reg_274;
wire   [7:0] zext_ln35_fu_171_p1;
reg    ap_block_state11_pp0_stage9_iter0;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage9_11001;
wire   [0:0] trunc_ln39_fu_175_p1;
reg   [0:0] trunc_ln39_reg_284;
wire   [7:0] zext_ln36_fu_179_p1;
wire   [7:0] zext_ln37_fu_183_p1;
wire   [7:0] zext_ln38_fu_187_p1;
wire   [7:0] zext_ln39_fu_191_p1;
reg    ap_block_state1;
reg    ap_block_pp0_stage3_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage4_subdone;
reg   [2:0] ap_phi_mux_i_phi_fu_73_p4;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_pp0_stage8_01001;
reg    ap_block_pp0_stage9_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
wire  signed [31:0] grp_fu_106_p0;
wire   [2:0] grp_fu_106_p1;
wire   [31:0] grp_fu_106_p2;
reg    grp_fu_106_ce;
wire    ap_CS_fsm_state17;
wire    regslice_both_consumer_U_apdone_blk;
reg   [11:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_producer_U_apdone_blk;
wire   [7:0] producer_TDATA_int_regslice;
wire    producer_TVALID_int_regslice;
reg    producer_TREADY_int_regslice;
wire    regslice_both_producer_U_ack_in;
reg   [7:0] consumer_TDATA_int_regslice;
reg    consumer_TVALID_int_regslice;
wire    consumer_TREADY_int_regslice;
wire    regslice_both_consumer_U_vld_out;
wire   [31:0] grp_fu_106_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

axiStreamExample_mul_32s_3ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mul_32s_3ns_32_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_106_p0),
    .din1(grp_fu_106_p1),
    .ce(grp_fu_106_ce),
    .dout(grp_fu_106_p2)
);

axiStreamExample_regslice_both #(
    .DataWidth( 8 ))
regslice_both_producer_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(producer_TDATA),
    .vld_in(producer_TVALID),
    .ack_in(regslice_both_producer_U_ack_in),
    .data_out(producer_TDATA_int_regslice),
    .vld_out(producer_TVALID_int_regslice),
    .ack_out(producer_TREADY_int_regslice),
    .apdone_blk(regslice_both_producer_U_apdone_blk)
);

axiStreamExample_regslice_both #(
    .DataWidth( 8 ))
regslice_both_consumer_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(consumer_TDATA_int_regslice),
    .vld_in(consumer_TVALID_int_regslice),
    .ack_in(consumer_TREADY_int_regslice),
    .data_out(consumer_TDATA),
    .vld_out(regslice_both_consumer_U_vld_out),
    .ack_out(consumer_TREADY),
    .apdone_blk(regslice_both_consumer_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((regslice_both_consumer_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_69 <= 3'd0;
    end else if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_reg_69 <= add_ln32_reg_214;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln32_reg_214 <= add_ln32_fu_87_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln32_reg_195 <= icmp_ln32_fu_81_p2;
        icmp_ln32_reg_195_pp0_iter1_reg <= icmp_ln32_reg_195;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        producer_read_1_reg_204 <= producer_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        producer_read_2_reg_209 <= producer_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_81_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        producer_read_reg_199 <= producer_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        trunc_ln33_2_reg_234 <= {{grp_fu_106_p2[15:8]}};
        trunc_ln33_3_reg_239 <= {{grp_fu_106_p2[23:16]}};
        trunc_ln33_4_reg_244 <= {{grp_fu_106_p2[31:24]}};
        trunc_ln34_reg_249 <= trunc_ln34_fu_147_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        trunc_ln35_reg_254 <= trunc_ln35_fu_151_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        trunc_ln36_reg_259 <= trunc_ln36_fu_155_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        trunc_ln37_reg_264 <= trunc_ln37_fu_159_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        trunc_ln38_reg_274 <= trunc_ln38_fu_167_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        trunc_ln39_reg_284 <= trunc_ln39_fu_175_p1;
    end
end

always @ (*) begin
    if ((icmp_ln32_reg_195 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_consumer_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_phi_fu_73_p4 = add_ln32_reg_214;
    end else begin
        ap_phi_mux_i_phi_fu_73_p4 = i_reg_69;
    end
end

always @ (*) begin
    if (((regslice_both_consumer_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        consumer_TDATA_blk_n = consumer_TREADY_int_regslice;
    end else begin
        consumer_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        consumer_TDATA_int_regslice = zext_ln39_fu_191_p1;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        consumer_TDATA_int_regslice = zext_ln38_fu_187_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        consumer_TDATA_int_regslice = zext_ln37_fu_183_p1;
    end else if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        consumer_TDATA_int_regslice = zext_ln36_fu_179_p1;
    end else if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage9_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        consumer_TDATA_int_regslice = zext_ln35_fu_171_p1;
    end else if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage8_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        consumer_TDATA_int_regslice = zext_ln34_fu_163_p1;
    end else if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage7_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        consumer_TDATA_int_regslice = trunc_ln33_4_reg_244;
    end else if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        consumer_TDATA_int_regslice = trunc_ln33_3_reg_239;
    end else if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        consumer_TDATA_int_regslice = trunc_ln33_2_reg_234;
    end else if (((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage4_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        consumer_TDATA_int_regslice = trunc_ln33_fu_112_p1;
    end else begin
        consumer_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        consumer_TVALID_int_regslice = 1'b1;
    end else begin
        consumer_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_106_ce = 1'b1;
    end else begin
        grp_fu_106_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln32_fu_81_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        producer_TDATA_blk_n = producer_TVALID_int_regslice;
    end else begin
        producer_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln32_reg_195 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln32_fu_81_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        producer_TREADY_int_regslice = 1'b1;
    end else begin
        producer_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((icmp_ln32_reg_195 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((icmp_ln32_reg_195 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((regslice_both_consumer_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln32_fu_87_p2 = (i_reg_69 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd11];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((producer_TVALID_int_regslice == 1'b0) & (icmp_ln32_fu_81_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((producer_TVALID_int_regslice == 1'b0) & (icmp_ln32_fu_81_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((producer_TVALID_int_regslice == 1'b0) & (icmp_ln32_fu_81_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0)))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = (((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0)))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = (((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0)))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = (((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state6_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state6_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0)))));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state8_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state8_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_io = ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage8_iter0 = (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state11_io = ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage9_iter0 = (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state12_io = ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage0_iter1 = ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state13_io = ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage1_iter1 = ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state14_io = ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage2_iter1 = ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state15_io = ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage3_iter1 = ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state16_io = ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage4_iter1 = ((consumer_TREADY_int_regslice == 1'b0) & (icmp_ln32_reg_195_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((producer_TVALID_int_regslice == 1'b0) & (icmp_ln32_fu_81_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage3_iter0 = ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state6_io = ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state6_pp0_stage4_iter0 = (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state7_io = ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage5_iter0 = (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state8_io = ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage6_iter0 = (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state9_io = ((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage7_iter0 = (((icmp_ln32_reg_195 == 1'd0) & (consumer_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_195 == 1'd0) & (producer_TVALID_int_regslice == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign consumer_TVALID = regslice_both_consumer_U_vld_out;

assign grp_fu_106_p0 = {{{{producer_TDATA_int_regslice}, {producer_read_2_reg_209}}, {producer_read_1_reg_204}}, {producer_read_reg_199}};

assign grp_fu_106_p1 = grp_fu_106_p10;

assign grp_fu_106_p10 = i_reg_69;

assign icmp_ln32_fu_81_p2 = ((ap_phi_mux_i_phi_fu_73_p4 == 3'd5) ? 1'b1 : 1'b0);

assign producer_TREADY = regslice_both_producer_U_ack_in;

assign trunc_ln33_fu_112_p1 = grp_fu_106_p2[7:0];

assign trunc_ln34_fu_147_p1 = producer_TDATA_int_regslice[3:0];

assign trunc_ln35_fu_151_p1 = producer_TDATA_int_regslice[3:0];

assign trunc_ln36_fu_155_p1 = producer_TDATA_int_regslice[1:0];

assign trunc_ln37_fu_159_p1 = producer_TDATA_int_regslice[0:0];

assign trunc_ln38_fu_167_p1 = producer_TDATA_int_regslice[0:0];

assign trunc_ln39_fu_175_p1 = producer_TDATA_int_regslice[0:0];

assign zext_ln34_fu_163_p1 = trunc_ln34_reg_249;

assign zext_ln35_fu_171_p1 = trunc_ln35_reg_254;

assign zext_ln36_fu_179_p1 = trunc_ln36_reg_259;

assign zext_ln37_fu_183_p1 = trunc_ln37_reg_264;

assign zext_ln38_fu_187_p1 = trunc_ln38_reg_274;

assign zext_ln39_fu_191_p1 = trunc_ln39_reg_284;

endmodule //axiStreamExample_Loop_VITIS_LOOP_32_1_proc3
