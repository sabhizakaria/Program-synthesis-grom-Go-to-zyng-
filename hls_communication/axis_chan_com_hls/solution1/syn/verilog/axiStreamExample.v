// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="axiStreamExample_axiStreamExample,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=56,HLS_SYN_TPT=57,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=249,HLS_SYN_LUT=289,HLS_VERSION=2020_2}" *)

module axiStreamExample (
        producer_TDATA,
        consumer_TDATA,
        ap_clk,
        ap_rst_n,
        producer_TVALID,
        producer_TREADY,
        consumer_TVALID,
        consumer_TREADY,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


input  [7:0] producer_TDATA;
output  [7:0] consumer_TDATA;
input   ap_clk;
input   ap_rst_n;
input   producer_TVALID;
output   producer_TREADY;
output   consumer_TVALID;
input   consumer_TREADY;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

 reg    ap_rst_n_inv;
wire    Loop_VITIS_LOOP_32_1_proc3_U0_ap_start;
wire    Loop_VITIS_LOOP_32_1_proc3_U0_ap_done;
wire    Loop_VITIS_LOOP_32_1_proc3_U0_ap_continue;
wire    Loop_VITIS_LOOP_32_1_proc3_U0_ap_idle;
wire    Loop_VITIS_LOOP_32_1_proc3_U0_ap_ready;
wire    Loop_VITIS_LOOP_32_1_proc3_U0_producer_TREADY;
wire   [7:0] Loop_VITIS_LOOP_32_1_proc3_U0_consumer_TDATA;
wire    Loop_VITIS_LOOP_32_1_proc3_U0_consumer_TVALID;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    Loop_VITIS_LOOP_32_1_proc3_U0_start_full_n;
wire    Loop_VITIS_LOOP_32_1_proc3_U0_start_write;

axiStreamExample_Loop_VITIS_LOOP_32_1_proc3 Loop_VITIS_LOOP_32_1_proc3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_VITIS_LOOP_32_1_proc3_U0_ap_start),
    .ap_done(Loop_VITIS_LOOP_32_1_proc3_U0_ap_done),
    .ap_continue(Loop_VITIS_LOOP_32_1_proc3_U0_ap_continue),
    .ap_idle(Loop_VITIS_LOOP_32_1_proc3_U0_ap_idle),
    .ap_ready(Loop_VITIS_LOOP_32_1_proc3_U0_ap_ready),
    .producer_TDATA(producer_TDATA),
    .producer_TVALID(producer_TVALID),
    .producer_TREADY(Loop_VITIS_LOOP_32_1_proc3_U0_producer_TREADY),
    .consumer_TDATA(Loop_VITIS_LOOP_32_1_proc3_U0_consumer_TDATA),
    .consumer_TVALID(Loop_VITIS_LOOP_32_1_proc3_U0_consumer_TVALID),
    .consumer_TREADY(consumer_TREADY)
);

assign Loop_VITIS_LOOP_32_1_proc3_U0_ap_continue = 1'b1;

assign Loop_VITIS_LOOP_32_1_proc3_U0_ap_start = ap_start;

assign Loop_VITIS_LOOP_32_1_proc3_U0_start_full_n = 1'b1;

assign Loop_VITIS_LOOP_32_1_proc3_U0_start_write = 1'b0;

assign ap_done = Loop_VITIS_LOOP_32_1_proc3_U0_ap_done;

assign ap_idle = Loop_VITIS_LOOP_32_1_proc3_U0_ap_idle;

assign ap_ready = Loop_VITIS_LOOP_32_1_proc3_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Loop_VITIS_LOOP_32_1_proc3_U0_ap_done;

assign ap_sync_ready = Loop_VITIS_LOOP_32_1_proc3_U0_ap_ready;

assign consumer_TDATA = Loop_VITIS_LOOP_32_1_proc3_U0_consumer_TDATA;

assign consumer_TVALID = Loop_VITIS_LOOP_32_1_proc3_U0_consumer_TVALID;

assign producer_TREADY = Loop_VITIS_LOOP_32_1_proc3_U0_producer_TREADY;

endmodule //axiStreamExample
